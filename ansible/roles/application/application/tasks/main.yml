---
- name: Installing tinc
  yum:
     name: tinc
     state: latest


#- name: Change folder owner
#  become: yes
#  file: >
#          path={{app.dirs.home}}/
#          state=directory
#          owner={{ ansible_user }}
#          group={{ ansible_user }}
#          mode="u+rwx,g+rwx"
#          recurse=yes
#  tags:
#    - clone-repo
#    - update-stage

#- name: Checking is firewall enabled
#- name: Adding firewalls rules
#firewall-cmd --direct --add-rule ipv4 nat POSTROUTING 0 -o eth_ext -j MASQUERADE
#firewall-cmd --direct --add-rule ipv4 filter FORWARD 0 -i eth_int -o eth_ext -j ACCEPT
#firewall-cmd --direct --add-rule ipv4 filter FORWARD 0 -i eth_ext -o eth_int -m state --state RELATED,ESTABLISHED -j ACCEPT


#- name: Allowing forwarding if needed
#sudo sed -e 's/#net\.ipv4\.ip_forward=1/net\.ipv4\.ip_forward=1/g' -i /etc/sysctl.conf
#sudo sysctl -w net.ipv4.ip_forward=1

- name: Add app group {{app.group}}
  become: yes
  group: >
        name={{app.group}}
        state=present
  tags:
    - update_configs

- name: Add app user {{app.user}}
  become: yes
  user: >
       name={{app.user}}
       state=present
       group={{app.group}}
  tags:
    - update_configs

- name: Creating directories
  become: yes
  file: >
        path={{app.dirs[item]}}/
        state=directory
        owner={{app.user}}
        group={{app.group}}
        mode="u+rwx,g+rwx,o+rwx"
        recurse=yes
  with_items: '{{app.dirs}}'
  tags:
    - update_configs

- name: Rendering configs from templates
  become: yes
  template: src={{ item.template }}
            dest={{ item.dest }}
            owner={{app.user}}
            group={{app.group}}
  with_items:
   - {template: "tinc.conf.j2", dest: "{{app.dirs.home}}/tinc.conf"}
   - {template: "tinc-up.j2", dest: "{{app.dirs.home}}/tinc-up"}
#  notify:
#    - restart_service
#  tags:
#    - update_configs

#- name: Rendering hosts files
#  become: yes
#  template: src={{ item.template }}
#            dest={{ item.dest }}
#            owner={{app.user}}
#            group={{app.group}}
#  with_items: {{templates.hosts}}
#   - {template: "tinc.conf.j2", dest: "{{app.dirs.home}}/tinc.conf"}
#   - {template: "tinc-up.j2", dest: "{{app.dirs.home}}/tinc-up"}
#
#- name: Add networks to tinc.conf file
#  lineinfile:
#    path: {{root_dir}}/tinc.conf
#    regexp: '^ConnectTo='
#    insertafter: '#Nodes'
#    line: 'ConnectTo={{inventory_hostname}}'
#delegate_to:
#!!!!!!
#
#
#- name: Adding routes to tinc-up
#  lineinfile:
#    path: {{root_dir}}/tinc-up
#    regexp: '^ConnectTo='
#    insertafter: '#Nodes'
#    line: 'ConnectTo={{inventory_hostname}}'
#delegate_to:
#!!!
#
#!!!chmod +x /etc/tinc/myvpn/tinc-down
#chmod +x /etc/tinc/myvpn/tinc-up
#
#!!!- name: Copy private key
#/etc/tinc/vpn1/rsa_key.priv
#
#
#
#- name: Making symbolic link
#  become: yes
#  file: src={{app.dirs.init_d}}/{{app.name}}
#        dest=/etc/init.d/{{app.name}}
#        state=link
#  tags:
#      - lns
#
#- name: chkconfig --add {{app.name}}
#  become: yes
#  shell: chkconfig --add {{app.name}}
#
#
#- name: Starting application
#become: True
#service: name={{app.name}}
#         state=started
#         enabled=yes
#
#- name: Adding hosts files
#
## Enable and start tinc:
#systemctl enable tinc@myvpn
#systemctl start tinc@myvpn
#











...






